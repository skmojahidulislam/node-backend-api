name: CI/CD to AWS EC2 with Docker

on:
    push:
        branches: [ "main" ]

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v2
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ${{ secrets.AWS_REGION }}

            - name: Login to Amazon ECR
              id: login-ecr
              uses: aws-actions/amazon-ecr-login@v2

            - name: Build and push Docker image
              run: |
                IMAGE_TAG=${GITHUB_SHA}
                docker build -t ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG .
                docker push ${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG
                echo "IMAGE=${{ secrets.ECR_REPOSITORY }}:$IMAGE_TAG" >> $GITHUB_ENV

            - name: Deploy on EC2
              uses: appleboy/ssh-action@v0.1.10
              with:
                host: ${{ secrets.EC2_IP }}
                username: ${{ secrets.EC2_USER }}
                key: ${{ secrets.EC2_KEY }}
                script: |
                  AWS_REGION=ap-south-1 
                  ACCOUNT_ID=${{ secrets.AWS_ACCOUNT_ID }}
                  IMAGE=$ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/node-api:latest

                  aws ecr get-login-password --region $AWS_REGION \
                    | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

                  docker ps -q --filter "name=node-api" | grep -q . && docker stop node-api && docker rm node-api || true

                  docker pull $IMAGE
                  docker run -d -p 5000:5000 --name node-api $IMAGE